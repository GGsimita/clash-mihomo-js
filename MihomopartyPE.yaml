# 改自Repcz1.8.10和refined-fish
# 适用版本：所有使用 Mihomo 内核的程序

#⭕混合端口，系统代理端口
mixed-port: 7890
#⭕SOCKS5 代理端口
socks-port: 1080
#⭕HTTP 代理端口
port: 8080
#⭕redir 透明代理端口，非linux系会报错
#redir-port: 7891
#⭕tproxy 透明代理端口，非linux系会报错
#tproxy-port: 7892
# TCP 并发连接所有 IP, 将使用最快握手的 TCP
tcp-concurrent: true
# 允许局域网的连接（可用来共享代理）
allow-lan: true
# 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录
ipv6: true
# 规则模式：rule/global/direct/script
mode: rule
# 设置日志输出级别: silent/error/warning/info/debug
log-level: info
# 全局 TLS 指纹  优先低于其他处的声明
global-client-fingerprint: chrome
# 匹配所有进程（always/strict/off） strict由mihomo决定是否开启（off:关闭，alwas:开启）
find-process-mode: strict
#外部控制器
external-controller: 0.0.0.0:9090
  # 127.0.0.1:9090
  # external-ui: ui
  # external-ui-url: 'https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip'
# 统一延迟计算
unified-delay: true
# geoip数据库使用db  false:mmdb，true:dat，mmdb更新但有设备不支持
geodata-mode: false
# GEO文件加载模式，默认memconservative（小内存设备模式）
geodata-loader: standard
# GEO文件自动更新
geo-auto-update: true
# GEO更新间隔，小时
geo-update-interval: 24
geox-url:
  # geoip: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat"
  # geosite: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://geodata.kelee.one/Country-Masaiki.mmdb"
  asn: "https://geodata.kelee.one/GeoLite2-ASN-P3TERX.mmdb"
# 全局UA，默认为clash.meta
global-ua: clash.meta
# 资源下载的 ETag 支持
etag-support: true
profile:
  # 存储 select 选择记录
  store-selected: true 
  # 持久化 fake-ip
  store-fake-ip: true  

##### 嗅探域名 可选配置 ####
sniffer:               
  enable: true
  # 是否使用嗅探结果作为实际访问，默认 true
  # 解析纯洁ip
  parse-pure-ip: true 
  # 强制映射dns
  force-dns-mapping: true
  # 覆盖目标
  override-destination: true
  sniff:
    TLS:
      # 端口白名单，只针对下列端口嗅探，不配置则全部嗅探
      ports: [443, 8443]
    HTTP:
      # 端口白名单，只针对下列端口嗅探，不配置则全部嗅探
      ports: [80, 8080-8880]
      override-destination: true
    QUIC:
      ports: [443, 8443]
  # 强制嗅探的域名
  force-domain:
    - +.v2ex.com
    - "+.netflix.com"
    - "+.nflxvideo.net"
    - "+.amazonaws.com"
    - "+.media.dssott.com"
  # 需要跳过嗅探的域名。主要解决部分站点sni字段非域名，导致嗅探结果异常的问题，如米家设备
  skip-domain:
    - "+.apple.com"
    - Mijia Cloud
    - dlg.io.mi.com
    - "+.oray.com"
    - "+.sunlogin.net"
    - geosite:cn

#### Tun 配置 ####
tun:
  enable: true
  # 可选： system/gvisor/mixed；
  stack: system
  # 自动设置全局路由，自动将全局流量路由进 tun
  auto-route: true
  # 仅Linux有效，自动配置 iptables/nftables 以重定向 TCP 连接，需要auto-route: true
  auto-redirect: true
  # 自动选择流量的出接口（wan）
  auto-detect-interface: true
  # dns 劫持，将匹配到的连接导入内部 dns 模块，不书写协议则默认 udp://。一般设置为 any:53 即可, 即劫持所有53端口的udp流量
  dns-hijack:
    - any:53
    - tcp://any:53
  # 严格路由，添加防火墙规则禁止Windows使用多DNS，有效防止DNS泄露
  strict-route: true
  # MTU
  mtu: 9000
  # 通用分段卸载
  gso: true
  # 数据块最大长度
  gso-max-size: 65536
  # 独立于端点的 NAT，性能可能下降，不建议不需要时开启
  endpoint-independent-nat: false

#### DNS 配置 ####
public-dns: &public-dns
  # 指定网卡获取的DNS，硬路由的wan口网卡名为wan
  - dhcp://wan
  # 指定网卡获取的DNS，软路由的wan口网卡名为最后一张网卡，双口就是eth1
  - dhcp://eth1
  # 阿里主DNS
  - 223.5.5.5
  # 阿里副DNS
  - 223.6.6.6

secure-dns: &secure-dns
   # 谷歌主DNS
  - https://8.8.8.8/dns-query
   # Cloudflare主DNS
  - https://1.1.1.1/dns-query
   # Cloudflare次DNS
  - https://1.0.0.1/dns-query

dns:
  #⭕启用dns
  enable: true
  # 优先使用HTTP/3，DoH能加速
  prefer-h3: true
  #⭕DNS监听端口，仅支持udp
  listen: 0.0.0.0:1053
  # 是否解析ipv6地址，否则返回空结果
  ipv6: true
  #⭕DNS处理模式：redir-host/fake-ip，fake-ip更快但引入问题（缓存fakeip后无法故障切换）
  enhanced-mode: redir-host
  # fakeip 下的 IP 段设置，tun接口的默认 IPV4 地址 也使用此值作为参考
  fake-ip-range: 198.18.0.1/16
  # fakeip过滤
  fake-ip-filter:
    - geosite:category-ads-all,category-games,cn,private
  # 黑/白名单模式，白名单下 filter 会返回 fake-ip
  fake-ip-filter-mode: blacklist
  # 查询配置文件 hosts
  use-hosts: true
  # 查询系统 hosts
  use-system-hosts: true
  # DNS请求遵循路由规则，需先配置好 proxy-server-nameserver，否则出现鸡蛋问题
  respect-rules: false
  # 优先级高于nameserver
  nameserver-policy:
    # 匹配广告域名
    'geosite:category-ads-all': rcode://success
    # 匹配中国，苹果域名，私有地址
    'geosite:cn,apple,private': *public-dns
    # 匹配非中国域名
    'geosite:geolocation-!cn': *secure-dns
    # 解析节点域名的DNS，不指定则遵循namepolicy
  proxy-server-nameserver: *secure-dns
  # 默认DNS组，域名未命中 nameserver-policy 时使用
  nameserver: *public-dns
  # direct策略组的 DNS 服务器，不填则遵循nameserver-policy
  direct-nameserver: *public-dns

# HOSTS设置
hosts:
  'mihomo.mihomo': 127.0.0.1

#### 策略组引用相关参数 ####
proxy-groups:
#分流分组
  - {name: 代理模式, type: select, proxies: [香港节点, 美国节点, 日本节点, 台湾节点, 狮城节点, 韩国节点], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Catnet.png }
  - {name: 直连模式, type: select, proxies: [DIRECT], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Rookie.png }
  - {name: 国内站点, type: select, proxies: [直连模式, 代理模式], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/StreamingCN.png }
  - {name: 人工智能, type: select, proxies: [香港节点, 美国节点, 日本节点, 台湾节点, 狮城节点, 韩国节点], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/STC.png }
  - {name: GitH社区, type: select, proxies: [香港节点, 美国节点, 日本节点, 台湾节点, 狮城节点, 韩国节点], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Godetia.png }
  - {name: 微软服务, type: select, proxies: [代理模式, 直连模式], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Pacifique.png }
  - {name: 谷歌应用, type: select, proxies: [代理模式, 直连模式], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Dukou.png }
  - {name: 苹果服务, type: select, proxies: [直连模式, 香港节点, 美国节点, 日本节点], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/GLaDOS.png }
  - {name: 漏网之鱼, type: select, proxies: [代理模式, 直连模式], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Bywave.png }
  #- {name: 广告拦截, type: select, proxies: [REJECT, DIRECT], icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Boom. png }
  
  
#节点分组
  - {name: 香港节点, type: url-test, include-all: true, interval: 600, tolerance: 50,  filter: "港|HK|(?i)Hong", icon: https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/erdongchanyo/HK02.png }             
  - {name: 日本节点, type: url-test, include-all: true, interval: 600, tolerance: 50,  filter: "日|东京|JP|(?i)Japan", icon: https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/erdongchanyo/JP.png }
  - {name: 台湾节点, type: url-test, include-all: true, interval: 600, tolerance: 50,  filter: "台|湾|TW|(?i)Taiwan", icon: https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/erdongchanyo/TW.png }
  - {name: 美国节点, type: url-test, include-all: true, interval: 600, tolerance: 50,  filter: "美|US|(?i)States|American", icon: https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/erdongchanyo/US.png }
  - {name: 狮城节点, type: url-test, include-all: true, interval: 600, tolerance: 50,  filter: "新|坡|SG|(?i)Singapore", icon: https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/erdongchanyo/SG.png }
  - {name: 韩国节点, type: url-test, include-all: true, interval: 600, tolerance: 50,  filter: "KR|Korea|KOR|韩国|韩|韓", icon: https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/erdongchanyo/KR.png }
###########################################################################################################################
# 分流规则 
rule-providers:
  #AdBlock:    {behavior: domain,    interval: 86400, format: text, type: http, url: https://ghp.ci/https://raw.githubusercontent.com/Cats-Team/AdRules/main/adrules_domainset.txt ,                                          path: ./ruleset/anti-ad-clash.txt }
  OpenAi:      {behavior: classical, interval: 86400, format: yaml, type: http, url: https://ghp.ci/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OpenAI/OpenAI.yaml ,                      path: ./ruleset/OpenAi.yaml       }
  Apple:       {behavior: classical, interval: 86400, format: yaml, type: http, url: https://ghp.ci/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Apple/Apple_Classical.yaml ,              path: ./ruleset/Apple.yaml        }
  Github:      {behavior: classical, interval: 86400, format: yaml, type: http, url: https://ghp.ci/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GitHub/GitHub.yaml ,                      path: ./ruleset/Github.yaml       }
  Microsoft:   {behavior: classical, interval: 86400, format: yaml, type: http, url: https://ghp.ci/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft.yaml ,                path: ./ruleset/Microsoft.yaml    }
  Google:      {behavior: classical, interval: 86400, format: yaml, type: http, url: https://ghp.ci/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Google/Google.yaml ,                      path: ./ruleset/Google.yaml       }
  Lan:         {behavior: classical, interval: 86400, format: yaml, type: http, url: https://ghp.ci/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.yaml ,                            path: ./ruleset/Lan.yaml          }
  游戏下载cn:  {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Game/GameDownloadCN/GameDownloadCN.list ,     path: ./ruleset/Lan.yaml          }
  游戏下载:    {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Game/GameDownload/GameDownload.list ,         path: ./ruleset/Lan.yaml          }
  游戏加速:    {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/GGsimita/clash-mihomo-js/refs/heads/main/Script-pub/gamepub.yaml ,                                      path: ./ruleset/Lan.yaml          }
  telegram:    {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/GGsimita/clash-mihomo-js/refs/heads/main/Script-pub/telegram.yaml ,                                     path: ./ruleset/Lan.yaml          }
  Pixiv:       {behavior: classical, interval: 86400, format: yaml, type: http, url: https://raw.githubusercontent.com/GGsimita/clash-mihomo-js/refs/heads/main/Script-pub/Pixivpub.list ,                                     path: ./ruleset/Lan.yaml          }

rules:
  #- RULE-SET,AdBlock,广告拦截
  - RULE-SET,OpenAi,人工智能
  - RULE-SET,Apple,苹果服务
  - RULE-SET,Github,GitH社区
  - RULE-SET,Microsoft,微软服务
  - RULE-SET,Google,谷歌应用
  - RULE-SET,游戏下载cn,国内站点
  - RULE-SET,游戏下载,谷歌应用
  - RULE-SET,游戏加速,GitH社区
  - RULE-SET,telegram,GitH社区
  - RULE-SET,Pixiv,谷歌应用
  - GEOIP,Lan,国内站点
  - RULE-SET,Lan,国内站点
  - GEOIP,CN,国内站点
  - MATCH,漏网之鱼
