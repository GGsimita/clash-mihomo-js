# 改自Repcz1.8.10和refined-fish
# 适用版本：所有使用 Mihomo 内核的程序

#⭕混合端口，系统代理端口
mixed-port: 7890
#⭕SOCKS5 代理端口
socks-port: 1080
#⭕HTTP 代理端口
port: 8080
#⭕redir 透明代理端口，非linux系会报错
#redir-port: 7891
#⭕tproxy 透明代理端口，非linux系会报错
#tproxy-port: 7892
# TCP 并发连接所有 IP, 将使用最快握手的 TCP
tcp-concurrent: true
# 允许局域网的连接（可用来共享代理）
allow-lan: true
# 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录
ipv6: true
# 规则模式：rule/global/direct/script
mode: rule
# 设置日志输出级别: silent/error/warning/info/debug
log-level: info
# 全局 TLS 指纹  优先低于其他处的声明
global-client-fingerprint: chrome
# 匹配所有进程（always/strict/off） strict由mihomo决定是否开启（off:关闭，alwas:开启）
find-process-mode: strict
#外部控制器
external-controller: 0.0.0.0:9090
  # 127.0.0.1:9090
  # external-ui: ui
  # external-ui-url: 'https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip'
# 统一延迟计算
unified-delay: true
# geoip数据库使用db  false:mmdb，true:dat，mmdb更新但有设备不支持
geodata-mode: false
# GEO文件加载模式，默认memconservative（小内存设备模式）
geodata-loader: standard
# GEO文件自动更新
geo-auto-update: true
# GEO更新间隔，小时
geo-update-interval: 24
geox-url:
  # geoip: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat"
  # geosite: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://geodata.kelee.one/Country-Masaiki.mmdb"
  asn: "https://geodata.kelee.one/GeoLite2-ASN-P3TERX.mmdb"
# 全局UA，默认为clash.meta
global-ua: clash.meta
# 资源下载的 ETag 支持
etag-support: true
profile:
  # 存储 select 选择记录
  store-selected: true 
  # 持久化 fake-ip
  store-fake-ip: true  

##### 嗅探域名 可选配置 ####
sniffer:               
  enable: true
  # 是否使用嗅探结果作为实际访问，默认 true
  # 解析纯洁ip
  parse-pure-ip: true 
  # 强制映射dns
  force-dns-mapping: true
  # 覆盖目标
  override-destination: true
  sniff:
    TLS:
      # 端口白名单，只针对下列端口嗅探，不配置则全部嗅探
      ports: [443, 8443]
    HTTP:
      # 端口白名单，只针对下列端口嗅探，不配置则全部嗅探
      ports: [80, 8080-8880]
      override-destination: true
    QUIC:
      ports: [443, 8443]
  # 强制嗅探的域名
  force-domain:
    - +.v2ex.com
    - "+.netflix.com"
    - "+.nflxvideo.net"
    - "+.amazonaws.com"
    - "+.media.dssott.com"
  # 需要跳过嗅探的域名。主要解决部分站点sni字段非域名，导致嗅探结果异常的问题，如米家设备
  skip-domain:
    - "+.apple.com"
    - Mijia Cloud
    - dlg.io.mi.com
    - "+.oray.com"
    - "+.sunlogin.net"
    - geosite:cn

#### Tun 配置 ####
tun:
  enable: true
  # 可选： system/gvisor/mixed；
  stack: system
  # dns劫持,一般设置为 any:53 即可, 即劫持所有53端口的udp流量
  dns-hijack: [any:53]
  # 自动设置全局路由，自动将全局流量路由进 tun
  auto-route: true
  # 仅Linux有效，自动配置 iptables/nftables 以重定向 TCP 连接，需要auto-route: true
  auto-redirect: true
  # 自动选择流量的出接口（wan）
  auto-detect-interface: true
  # dns 劫持，将匹配到的连接导入内部 dns 模块，不书写协议则默认 udp://。一般设置为 any:53 即可, 即劫持所有53端口的udp流量
  dns-hijack:
    - any:53
    - tcp://any:53
  # 严格路由，添加防火墙规则禁止Windows使用多DNS，有效防止DNS泄露
  strict-route: true
  # MTU
  mtu: 9000
  # 通用分段卸载
  gso: true
  # 数据块最大长度
  gso-max-size: 65536
  # 独立于端点的 NAT，性能可能下降，不建议不需要时开启
  endpoint-independent-nat: false

#### DNS 配置 ####
public-dns: &public-dns
  # 指定网卡获取的DNS，硬路由的wan口网卡名为wan
  - dhcp://wan
  # 指定网卡获取的DNS，软路由的wan口网卡名为最后一张网卡，双口就是eth1
  - dhcp://eth1
  # 阿里主DNS
  - 223.5.5.5
  # 阿里副DNS
  - 223.6.6.6

secure-dns: &secure-dns
   # 谷歌主DNS
  - https://8.8.8.8/dns-query
   # Cloudflare主DNS
  - https://1.1.1.1/dns-query
   # Cloudflare次DNS
  - https://1.0.0.1/dns-query

dns:
  #⭕启用dns
  enable: true
  # 优先使用HTTP/3，DoH能加速
  prefer-h3: true
  #⭕DNS监听端口，仅支持udp
  listen: 0.0.0.0:1053
  # 是否解析ipv6地址，否则返回空结果
  ipv6: true
  #⭕DNS处理模式：redir-host/fake-ip，fake-ip更快但引入问题（缓存fakeip后无法故障切换）
  enhanced-mode: redir-host
  # fakeip 下的 IP 段设置，tun接口的默认 IPV4 地址 也使用此值作为参考
  fake-ip-range: 198.18.0.1/16
  # fakeip过滤
  fake-ip-filter:
    - geosite:category-ads-all,category-games,cn,private
  # 黑/白名单模式，白名单下 filter 会返回 fake-ip
  fake-ip-filter-mode: blacklist
  # 查询配置文件 hosts
  use-hosts: true
  # 查询系统 hosts
  use-system-hosts: true
  # DNS请求遵循路由规则，需先配置好 proxy-server-nameserver，否则出现鸡蛋问题
  respect-rules: false
  # 优先级高于nameserver
  nameserver-policy:
    # 匹配广告域名
    'geosite:category-ads-all': rcode://success
    # 匹配中国，苹果域名，私有地址
    'geosite:cn,apple,private': *public-dns
    # 匹配非中国域名
    'geosite:geolocation-!cn': *secure-dns
    # 解析节点域名的DNS，不指定则遵循namepolicy
  proxy-server-nameserver: *secure-dns
  # 默认DNS组，域名未命中 nameserver-policy 时使用
  nameserver: *public-dns
  # direct策略组的 DNS 服务器，不填则遵循nameserver-policy
  direct-nameserver: *public-dns

# HOSTS设置
hosts:
  'mihomo.mihomo': 127.0.0.1

#### 策略组引用相关参数 ####
# 锚点 - 节点订阅的参数 [每12小时更新一次订阅节点，每 1800 秒（半个小时）一次健康检查]
NodeParam: &NodeParam {type: http, interval: 42300, health-check: {enable: true, url: 'http://www.google.com/generate_204', interval: 1800}}
# 锚点 - 节点订阅url 里填写自己的订阅,名称和path（文件位置）均不能重复
########################################################################################################################################################################
########################################################################################################################################################################
proxy-providers-general: &proxy-providers-general
  # 类型，可选http/file
  type: http
  interval: 86400
  proxy: DIRECT
  size-limit: 0
  override:
    # 启用TCP Fast Open，一般都不支持
    tfo: false
    # 启用TCP Multi Path，一般都不支持
    mptcp: false
    udp: true
    # 启用 UDP over TCP
    udp-over-tcp: false
    # 跳过证书验证
    skip-cert-verify: false
proxy-providers: 
  Subscribe: {<<: *NodeParam, path: ./proxy-providers/Sub.yaml, url: https://ovo.o00o.ooo/ooo}
    # 在此将"https://ovo.o00o.ooo/ooo"替换为你的机场订阅，推荐使用 base64 或者 node list
    # Sub-Store生成的链接,可以直接替换上述 url 引号中的部分,具体见 Sub-Store 教程
use-all-proxy-providers: &use-all-proxy-providers
  use:
    #❗use-provider占位1
    #❗use-provider占位2
    #❗use-provider占位3
    #❗use-provider占位4

health-check-general: &health-check-general
  <<: *use-all-proxy-providers
  url: http://www.google.com/generate_204
  interval: 30
  tolerance: 200
  lazy: true
  timeout: 5000
########################################################################################################################################################################
########################################################################################################################################################################

# 策略组
proxy-groups:
  - {name: ♻️自动选择, type: url-test, <<: *health-check-general}
  - {name: ⚠️自动回退, type: fallback, <<: *health-check-general}
  - {name: 🐟漏网之鱼, type: select, proxies: [DIRECT, ♻️自动选择, 🇭🇰香港节点, 🇨🇳台湾节点, 🇸🇬狮城节点, 🇯🇵日本节点, 🇺🇲美国节点, 🖐️手动切换]}
  - {name: 🖐️手动切换, type: select, <<: *use-all-proxy-providers}
  - {name: Ⓜ️微软Bing, type: select, proxies: [⚠️自动回退, ♻️自动选择, 🇭🇰香港节点, 🇨🇳台湾节点, 🇸🇬狮城节点, 🇯🇵日本节点, 🇺🇲美国节点, 🖐️手动切换, DIRECT]}
  - {name: 🤖OpenAi, type: select, proxies: [🇸🇬狮城节点, ♻️自动选择, 🇭🇰香港节点, 🇨🇳台湾节点, 🇯🇵日本节点, 🇺🇲美国节点, 🖐️手动切换]}
  - {name: 📞电报消息, type: select, proxies: [♻️自动选择, 🇭🇰香港节点, 🇨🇳台湾节点, 🇸🇬狮城节点, 🇯🇵日本节点, 🇺🇲美国节点, 🖐️手动切换]}
######
  - {name: 🇭🇰香港节点, type: url-test, <<: *health-check-general, filter: "港|HK|hk|Hong Kong|HongKong|hongkong"}
  - {name: 🇯🇵日本节点, type: url-test, <<: *health-check-general, filter: "日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan"}
  - {name: 🇺🇲美国节点, type: url-test, <<: *health-check-general, filter: "美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States"}
  - {name: 🇨🇳台湾节点, type: url-test, <<: *health-check-general, filter: "台|新北|彰化|TW|Taiwan"}
  - {name: 🇸🇬狮城节点, type: url-test, <<: *health-check-general, filter: "新加坡|坡|狮城|SG|Singapore"}

###########################
rule-providers-general: &rule-providers-general
  type: http
  behavior: classical
  interval: 86400

rule-providers:  
  ♻️自动选择-FISH: {<<: *rule-providers-general, url: https://raw.githubusercontent.com/refined-fish/clash_rule_fish/refs/heads/main/Ruleset/♻️自动选择-FISH.yaml, path: ./providers/rule-provider_♻️自动选择-FISH.yaml}
  🌐Direct-FISH: {<<: *rule-providers-general, url: https://raw.githubusercontent.com/refined-fish/clash_rule_fish/refs/heads/main/Ruleset/🌐Direct-FISH.yaml, path: ./providers/rule-provider_🌐Direct-FISH.yaml}
  UnBan: {<<: *rule-providers-general, url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/refs/heads/master/Clash/Providers/UnBan.yaml, path: ./providers/rule-provider_UnBan.yaml}
  游戏下载cn: {<<: *rule-providers-general, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Game/GameDownloadCN/GameDownloadCN.list, path: ./providers/rule-provider_Download.yaml}
  游戏下载: {<<: *rule-providers-general, url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Game/GameDownload/GameDownload.list, path: ./providers/rule-provider_Download.yaml}
  游戏加速: {<<: *rule-providers-general, url: https://raw.githubusercontent.com/GGsimita/clash-mihomo-js/refs/heads/main/Script-pub/gamepub.yaml, path: ./providers/rule-provider_Download.yaml}
  GoogleCN: {<<: *rule-providers-general, url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/refs/heads/master/Clash/Providers/Ruleset/GoogleCN.yaml, path: ./providers/rule-provider_GoogleCN.yaml}
  Bing: {<<: *rule-providers-general, url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/refs/heads/master/Clash/Providers/Ruleset/Bing.yaml, path: ./providers/rule-provider_Bing.yaml}
  Microsoft: {<<: *rule-providers-general, url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/refs/heads/master/Clash/Providers/Ruleset/Microsoft.yaml, path: ./providers/rule-provider_Microsoft.yaml}
  Pixiv: {<<: *rule-providers-general, url: https://raw.githubusercontent.com/GGsimita/clash-mihomo-js/refs/heads/main/Script-pub/Pixivpub.list, path: ./providers/rule-provider_GoogleCN.yaml}
###########################################################################################################################
rules:
  - AND,((NETWORK,UDP),(DST-PORT,443)),REJECT  # 禁用QUIC
  - RULE-SET,♻️自动选择-FISH,♻️自动选择
  - RULE-SET,🌐Direct-FISH,DIRECT
  - GEOIP,private,DIRECT,no-resolve
  - GEOSITE,private,DIRECT
  - RULE-SET,UnBan,DIRECT
  - GEOSITE,category-ads-all,REJECT
  - RULE-SET,游戏下载cn,DIRECT
  - RULE-SET,游戏下载,♻️自动选择
  - RULE-SET,游戏加速,♻️自动选择
  - RULE-SET,Pixiv,♻️自动选择
  - RULE-SET,GoogleCN,DIRECT
  - GEOSITE,steam@cn,DIRECT
  - RULE-SET,Bing,Ⓜ️微软Bing
  - GEOSITE,onedrive,DIRECT
  - RULE-SET,Microsoft,DIRECT
  - GEOSITE,openai,🤖OpenAi
  - GEOSITE,bahamut,🇨🇳台湾节点
  - GEOSITE,telegram,📞电报消息
  - GEOIP,telegram,📞电报消息,no-resolve
  - GEOSITE,category-porn,♻️自动选择
  - GEOSITE,gfw,♻️自动选择
  - GEOSITE,cn,DIRECT
  - GEOIP,cn,DIRECT,no-resolve
  - MATCH,🐟漏网之鱼
